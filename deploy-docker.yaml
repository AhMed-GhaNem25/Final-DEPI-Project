
- name: setup docker with ansible
  hosts: 54.204.216.90
  become: yes

  tasks:
    - name: install docker
      yum:
        name: docker
        update_cache: yes
        state: present

- name: start docker
  hosts: 54.204.216.90
  become: yes
  tasks:
    - name: start docker
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

- name: install nodejs
  hosts: 54.204.216.90
  become: yes
  tasks:
    - name: install nodejs
      yum:
        name: nodejs
        update_cache: yes
        state: present

- name : install docker-compose
  hosts: 54.204.216.90
  become: yes
  tasks:
    - name: install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: +x

- name: copy docker-compose file
  hosts: 54.204.216.90
  tasks:
    - name: copy docker-compose file
      copy:
        src: ./mongo.yaml
        dest: /home/ec2-user/mongo.yaml
        force: yes

- name: copy utility app
  hosts: 54.204.216.90
  tasks:
    - name: copy /utility app
      copy:
        src: ./utility-app
        dest: /home/ec2-user/

- name: install aws-cli
  hosts: 54.204.216.90
  become: yes
  tasks:
    - name: install aws-cli
      yum:
        name: aws-cli
        update_cache: yes
        state: present

- name: Pull the latest image
  command: docker-compose -f /home/ec2-user/mongo.yaml pull

- name: deploy docker-compose
  hosts: 54.204.216.90
  tasks:
    - name: deploy docker-compose
      become: true
      become_user: root
      command: docker-compose -f /home/ec2-user/mongo.yaml up -d --force-recreate

- name: Clean up unused Docker resources
  command: docker system prune -f

      